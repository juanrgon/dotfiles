#!/usr/bin/env bash

# Print usage if no arguments provided
if [ $# -eq 0 ]; then
    echo "Usage: find-bad-commit --max-commits=N COMMAND"
    echo "Example: find-bad-commit --max-commits=100 'npm i && npm run lint'"
    exit 1
fi

# Parse the max-commits argument
max_commits=""
command=""

for arg in "$@"; do
    if [[ $arg =~ ^--max-commits=([0-9]+)$ ]]; then
        max_commits="${BASH_REMATCH[1]}"
    else
        if [ -z "$command" ]; then
            command="$arg"
        else
            command="$command $arg"
        fi
    fi
done

# Validate arguments
if [ -z "$max_commits" ]; then
    echo "Error: --max-commits is required"
    echo "Example: find-bad-commit --max-commits=100 'npm i && npm run lint'"
    exit 1
fi

if [ -z "$command" ]; then
    echo "Error: command is required"
    echo "Example: find-bad-commit --max-commits=100 'npm i && npm run lint'"
    exit 1
fi

# Run git bisect
git bisect start && \
git bisect bad HEAD && \
git bisect good HEAD~"$max_commits" && \
git bisect run sh -c "$command"

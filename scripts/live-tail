#!/bin/bash

# live-tail
# This script runs a provided command and continuously displays the last 10 lines of its output.
# It stops running and clears the corresponding lines once the command finishes execution.
# The purpose is to have a clean terminal output for long-running commands that produce a lot of output.
# Note: This script uses ANSI escape codes to manipulate the cursor and the terminal screen,
# which might not work correctly in all terminal emulators.

# Example: live-tail ping google.com

# Usage: live-tail [OPTIONS] <command>
# Options:
#   -N    Display N lines instead of 10
#   --tee <file>    Tee the output to the specified file

# Default number of lines
number_of_lines=10

# Default temporary file
tmpfile=$(mktemp)

# Process command-line arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    -[0-9]*)
      number_of_lines=${1#-}
      shift
      ;;
    --tee)
      if [[ -n "$2" ]]; then
        tmpfile=$2
        shift 2
      else
        echo "Error: File name is missing for --tee option."
        exit 1
      fi
      ;;
    *)
      break
      ;;
  esac
done

# check if command line arguments are provided
if [ $# -eq 0 ]; then
    echo "No command provided. Usage: $0 <command>"
    exit 1
fi

# start the command and send its output to the file
"$@" > "$tmpfile" 2>&1 &
pid=$!

# save cursor position
printf "\0337"

# continuously show the last 10 lines of output
old_output=""
while true; do
  # check if the process is still running
  if ! kill -0 $pid 2> /dev/null; then
    wait $pid
    exit_status=$?
    # Remove ANSI escape codes from the output file
    rm -f "$tmpfile"

    # if the exit status is 0, clear the output
    if [ $exit_status -eq 0 ]; then
        printf "\0338\033[J\0337"
    fi

    exit $exit_status
  fi

  output="$(tail -n $number_of_lines "$tmpfile")"

  if [ "$output" != "$old_output" ]; then
    # restore to saved cursor position, clear below, save cursor position again
    printf "\0338\033[J\0337"
    echo "$output"
    old_output="$output"
  fi

  sleep 0.1
done

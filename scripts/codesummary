#!/usr/bin/env python
import argparse
import os


def read_gitignore(gitignore_path):
    excludes = []
    if os.path.exists(gitignore_path):
        with open(gitignore_path, "r") as gitignore_file:
            excludes = [line.strip() for line in gitignore_file.readlines()]
    return excludes


def is_excluded(path, exclude_patterns):
    for pattern in exclude_patterns:
        try:
            common_path = os.path.commonpath([path, pattern])
            if common_path == pattern:
                return True
        except ValueError:
            pass
    return False


def print_contents(directory, exclude_patterns):
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            if not is_excluded(file_path, exclude_patterns):
                with open(file_path, "r") as content_file:
                    content = content_file.read()
                    print(f"\n\nFile: {file_path}\n\n{content}\n\n")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Print the contents of a directory as a prompt for ChatGPT."
    )
    parser.add_argument("directory", help="Directory path to print contents from.")
    parser.add_argument(
        "--exclude", nargs="*", help="List of files and directories to exclude."
    )
    args = parser.parse_args()

    exclude_patterns = []
    if args.exclude is None:
        gitignore_path = os.path.join(args.directory, ".gitignore")
        exclude_patterns = read_gitignore(gitignore_path)
    else:
        exclude_patterns = args.exclude

    print_contents(args.directory, exclude_patterns)
